#include <stdio.h>
#include <string.h>

void cavityMap(int n, char grid[n][n+1]) {
    // Create a copy of the grid to modify
    char modified_grid[n][n+1];

    // Copy the original grid to modified_grid
    for (int i = 0; i < n; i++) {
        strcpy(modified_grid[i], grid[i]);
    }

    // Check each cell that is not on the border
    for (int i = 1; i < n - 1; i++) {
        for (int j = 1; j < n - 1; j++) {
            // Check if the current cell is a cavity
            if (grid[i][j] > grid[i-1][j] && grid[i][j] > grid[i+1][j] && 
                grid[i][j] > grid[i][j-1] && grid[i][j] > grid[i][j+1]) {
                modified_grid[i][j] = 'X'; // Replace with 'X'
            }
        }
    }

    // Print the modified grid
    for (int i = 0; i < n; i++) {
        printf("%s\n", modified_grid[i]);
    }
}

int main() {
    int n;
    
    // Read the size of the grid
    scanf("%d", &n);
    char grid[n][n+1]; // Array to store the grid, +1 for null-terminator

    // Read the grid
    for (int i = 0; i < n; i++) {
        scanf("%s", grid[i]);
    }

    // Call the cavityMap function
    cavityMap(n, grid);

    return 0;
}
