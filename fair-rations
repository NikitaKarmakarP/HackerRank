#include <stdio.h>

const char* fairRations(int B[], int N) {
    int total_loaves = 0;
    int loaves_distributed = 0;

    // Calculate the total number of loaves
    for (int i = 0; i < N; i++) {
        total_loaves += B[i];
    }

    // If the total is odd, it's impossible to make them all even
    if (total_loaves % 2 != 0) {
        return "NO";
    }

    // Distribute loaves to make all even
    for (int i = 0; i < N - 1; i++) {
        // If the current person has an odd number of loaves
        if (B[i] % 2 != 0) {
            B[i]++;      // Give one loaf to the current person
            B[i + 1]++;  // Give one loaf to the next person
            loaves_distributed += 2; // Count the distributed loaves
        }
    }

    // Check if the last person has an even number of loaves
    if (B[N - 1] % 2 != 0) {
        return "NO";
    }

    // Return the number of loaves distributed
    static char result[20]; // To store the result as a string
    snprintf(result, sizeof(result), "%d", loaves_distributed);
    return result;
}

int main() {
    int N;
    
    // Read number of subjects
    scanf("%d", &N);
    
    int B[N]; // Array to store the number of loaves for each subject

    // Read the initial distribution of loaves
    for (int i = 0; i < N; i++) {
        scanf("%d", &B[i]);
    }

    // Get the result from the function
    const char* result = fairRations(B, N);
    
    // Print the result
    printf("%s\n", result); // Output the minimum number of loaves required or "NO"

    return 0;
}
